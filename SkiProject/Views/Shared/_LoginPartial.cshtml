@using SkiProject.Infrastructure.Data.Models.Account
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IHttpContextAccessor _context;

@{
    var user = await UserManager.GetUserAsync(_context.HttpContext.User);
}
<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        @if (ViewBag["IsNewMessage"].Equals(true))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" style="color:darkred" asp-area="" asp-controller="Message" asp-action="ShowChats">Messages</a>
            </li>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Message" asp-action="ShowChats">Messages</a>
            </li>
        }
       
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Profile" asp-action="Index" title="Manage">Hello, @UserManager.GetUserName(User)</a>
            @*<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello, @UserManager.GetUserName(User)</a>*@
        </li>
       
        <li class="nav-item">
             <form class="form-inline" asp-controller="Account" asp-action="Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
             </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Login">Login</a>
        </li>
    }
</ul>


